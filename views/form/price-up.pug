extends ../shared/layout.pug

block content
  h1= title
  include ../shared/login_info.pug
  include ../shared/nav.pug

  script.
    function disable() {
      var value = document.getElementById('scope').value;

      if (value === 'Domestic') {
        document.getElementById('dest').disabled=true;
        document.getElementById('dest').style.visibility='hidden';
        document.getElementById('origin').disabled=true;
        document.getElementById('origin').style.visibility='hidden';
      } else if (value === 'International') {
        document.getElementById('dest').disabled=false;
        document.getElementById('dest').style.visibility='visible';
        document.getElementById('origin').disabled=false;
        document.getElementById('origin').style.visibility='visible';
      }
    }
    window.onload = disable;

    function checkFromTo() {
      var froms = ['Auckland', 'Hamilton', 'Rotorua', 'Palmerston North', 'Wellington', 'Christchurch', 'Dunedin', 'New Zealand'];
      var destination = document.getElementById('to').value;
      if(document.getElementById('scope').value === 'International' && document.getElementById('from').value === document.getElementById('to').value) {
        alert('Origin and destination cannot be the same');
        return false;
      } else if(document.getElementById('scope').value === 'International' && froms.indexOf(destination) >= 0) {
        alert('You have selected international as your scope.  You cannot select a local destination');
        return false;
      }

      return true;
    }

  form(action='/price_process',method='post')
    - var sco
    - var pri

    if (instance !== null)
      - var array = instance.priority[0].split(' ')
      - sco = array[0]
      - pri = array[1]

    fieldset
      strong Scope *
      select(id='scope' name='scope' onchange='disable()')
        for val in scope
          if (instance === null || sco !== val)
            option(value=val) #{val}
          else
            option(value=val selected) #{val}

      br

      strong Priority *
      select(name= 'priority')
        for val in priority
          if (instance === null || pri !== val)
            option(value=val) #{val}
          else
            option(value=val selected) #{val}

      br

      div(id='origin')
        strong Origin *
        select(id='from' name='from')
          for val in froms
            if (instance === null || instance.from[0] !== val)
              option(value=val) #{val}
            else
              option(value=val selected) #{val}

      div(id='dest')
        strong Destination *
        if (instance === null)
          input(type='text' id='to' name='to' placeholder='enter city name' required)
        else
          input(type='text' id='to' name='to' value=instance.to[0]  placeholder='enter city name' required)

      strong Volume Cost *
      if (instance === null)
        input(type='number' step='0.01' min='1' name='volumecost' placeholder='cost per cubic centimetre' required)
      else
        input(type='number' step='0.01' min='1' name='volumecost' value=instance.volumecost[0] placeholder='cost per cubic centimetre' required)
      br

      strong Weight Cost *
      if (instance === null)
        input(type='number' step='0.01' min='1' name='weightcost' placeholder='cost per gram' required)
      else
        input(type='number' step='0.01' min='1' name='weightcost' value=instance.weightcost[0] placeholder='cost per per gram' required)

      br

      if (instance !== null)
        p= 'This form has been pre-filled. You may choose to change these values'

      p
        strong=  'Fields marked with * are required'

      input(
        type='submit'
        value='Submit'
        onclick='return checkFromTo()'
      )
